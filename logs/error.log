2024-12-30 02:52:53 [ERROR]: PrismaClientKnownRequestError: 
Invalid `tx.captain.create()` invocation in
/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:33:43

  30 
  31 const hashedPassword = await hashPassword(password);
  32 
→ 33 const newCaptain = await tx.captain.create(
Unique constraint failed on the fields: (`plate`)
    at qn.handleRequestError (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/node_modules/@prisma/client/runtime/library.js:121:7315)
    at qn.handleAndLogRequestError (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/node_modules/@prisma/client/runtime/library.js:121:6640)
    at qn.request (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/node_modules/@prisma/client/runtime/library.js:121:6347)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async l (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/node_modules/@prisma/client/runtime/library.js:130:9616)
2024-12-30 02:52:53 [ERROR]: AuthError: Registration failed. Please try again later.
    at /Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:80:11
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:6:65)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-12-30 02:59:30 [ERROR]: PrismaClientKnownRequestError: 
Invalid `tx.captain.create()` invocation in
/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:33:43

  30 
  31 const hashedPassword = await hashPassword(password);
  32 
→ 33 const newCaptain = await tx.captain.create(
Unique constraint failed on the fields: (`plate`)
    at qn.handleRequestError (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/node_modules/@prisma/client/runtime/library.js:121:7315)
    at qn.handleAndLogRequestError (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/node_modules/@prisma/client/runtime/library.js:121:6640)
    at qn.request (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/node_modules/@prisma/client/runtime/library.js:121:6347)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async l (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/node_modules/@prisma/client/runtime/library.js:130:9616)
2024-12-30 02:59:30 [ERROR]: AuthError: Registration failed. Please try again later.
    at /Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:94:11
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:6:65)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-12-30 03:02:30 [ERROR]: AuthError: Vehicle with plate up21cf6956 already exists
    at /Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:42:17
    at Generator.next (<anonymous>)
    at fulfilled (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-12-30 03:02:30 [ERROR]: AuthError: Vehicle with plate up21cf6956 already exists
    at /Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:42:17
    at Generator.next (<anonymous>)
    at fulfilled (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-12-30 03:07:37 [ERROR]: AuthError: Email already registered
    at /Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:30:15
    at Generator.next (<anonymous>)
    at fulfilled (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-12-30 03:07:37 [ERROR]: AuthError: Email already registered
    at /Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:30:15
    at Generator.next (<anonymous>)
    at fulfilled (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-12-30 03:07:50 [ERROR]: AuthError: Vehicle with plate up21cf6957 already exists
    at /Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:42:17
    at Generator.next (<anonymous>)
    at fulfilled (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-12-30 03:07:50 [ERROR]: AuthError: Vehicle with plate up21cf6957 already exists
    at /Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:42:17
    at Generator.next (<anonymous>)
    at fulfilled (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-12-30 03:07:57 [ERROR]: AuthError: Socket ID is already in use
    at /Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:52:15
    at Generator.next (<anonymous>)
    at fulfilled (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-12-30 03:07:57 [ERROR]: AuthError: Socket ID is already in use
    at /Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:52:15
    at Generator.next (<anonymous>)
    at fulfilled (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
2024-12-31 22:20:57 [ERROR]: AuthError: Email already registered
    at /Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:30:15
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Proxy._transactionWithCallback (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/node_modules/@prisma/client/runtime/library.js:130:7983)
    at async registerCaptain (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:21:12)
    at async registerCaptainController (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/controllers/captainController.ts:15:41)
2024-12-31 22:20:57 [ERROR]: AuthError: Email already registered
    at /Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:30:15
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async Proxy._transactionWithCallback (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/node_modules/@prisma/client/runtime/library.js:130:7983)
    at async registerCaptain (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/services/captainService.ts:21:12)
    at async registerCaptainController (/Users/anuragsingh/Github Project/Backend/CabBookingNode/Backend/src/controllers/captainController.ts:15:41)
2025-03-20 22:30:47 [ERROR]: ZodError: [
  {
    "received": "CAR",
    "code": "invalid_enum_value",
    "options": [
      "SEDAN",
      "SUV",
      "HATCHBACK",
      "BIKE"
    ],
    "path": [
      "vehicle",
      "vehicleType"
    ],
    "message": "Invalid enum value. Expected 'SEDAN' | 'SUV' | 'HATCHBACK' | 'BIKE', received 'CAR'"
  }
]
    at Object.get error [as error] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/zod/lib/types.js:55:31)
    at ZodObject.parse (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/zod/lib/types.js:131:22)
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/captainController.ts:13:49
    at Generator.next (<anonymous>)
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/captainController.ts:8:71
    at new Promise (<anonymous>)
    at __awaiter (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/captainController.ts:4:12)
    at registerCaptainController (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/captainController.ts:11:20)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:149:13)
2025-03-20 22:31:34 [ERROR]: PrismaClientValidationError: 
Invalid `tx.captain.create()` invocation in
/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:59:43

  56 const hashedPassword = await hashPassword(password);
  57 
  58 // Create the captain and related entities
→ 59 const newCaptain = await tx.captain.create({
       data: {
         email: "anuragsingh11123@gmail.com",
         firstName: "John",
         lastName: "Doe",
         socketId: "abc123xy2",
         password: "$2a$10$SZv3ftX2FnRvg8y4.O6pruNee85IqPbSXCf.EcHSnZz5Ss2V1wIki",
         status: "INACTIVE",
         location: {
           create: {
             latitude: 40.712776,
             longitude: -74.005974
           }
         },
         vehicle: {
           create: {
             color: "Red",
             plate: "UP21CF6958",
             capacity: 4,
             vehicleType: "SEDAN"
                          ~~~~~~~
           }
         }
       },
       include: {
         location: true,
         vehicle: true
       }
     })

Invalid value for argument `vehicleType`. Expected VehicleType.
    at wn (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:29:1363)
    at qn.handleRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6958)
    at qn.handleAndLogRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6640)
    at qn.request (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6347)
    at async l (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:130:9616)
2025-03-20 22:31:34 [ERROR]: AuthError: Registration failed. Please try again later.
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:128:11
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:6:65)
2025-03-20 22:32:02 [ERROR]: PrismaClientValidationError: 
Invalid `tx.captain.create()` invocation in
/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:59:43

  56 const hashedPassword = await hashPassword(password);
  57 
  58 // Create the captain and related entities
→ 59 const newCaptain = await tx.captain.create({
       data: {
         email: "anuragsingh11123@gmail.com",
         firstName: "John",
         lastName: "Doe",
         socketId: "abc123xy2",
         password: "$2a$10$ph5F1pTz4g2LuZYtAg8tYexo2zC9Zm7vv5qZLPH7WmAQqh9qLJzhC",
         status: "INACTIVE",
         location: {
           create: {
             latitude: 40.712776,
             longitude: -74.005974
           }
         },
         vehicle: {
           create: {
             color: "Red",
             plate: "UP21CF6958",
             capacity: 4,
             vehicleType: "SEDAN"
                          ~~~~~~~
           }
         }
       },
       include: {
         location: true,
         vehicle: true
       }
     })

Invalid value for argument `vehicleType`. Expected VehicleType.
    at wn (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:29:1363)
    at qn.handleRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6958)
    at qn.handleAndLogRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6640)
    at qn.request (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6347)
    at async l (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:130:9616)
2025-03-20 22:32:02 [ERROR]: AuthError: Registration failed. Please try again later.
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:128:11
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:6:65)
2025-03-20 22:34:18 [ERROR]: PrismaClientKnownRequestError: 
Invalid `tx.captain.create()` invocation in
/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:59:43

  56 const hashedPassword = await hashPassword(password);
  57 
  58 // Create the captain and related entities
→ 59 const newCaptain = await tx.captain.create(
Transaction API error: Transaction already closed: A query cannot be executed on an expired transaction. The timeout for this transaction was 5000 ms, however 5268 ms passed since the start of the transaction. Consider increasing the interactive transaction timeout or doing less work in the transaction.
    at qn.handleRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:7315)
    at qn.handleAndLogRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6640)
    at qn.request (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6347)
    at async l (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:130:9616)
2025-03-20 22:34:18 [ERROR]: AuthError: Registration failed. Please try again later.
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:128:11
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:6:65)
2025-03-20 22:34:57 [ERROR]: PrismaClientKnownRequestError: 
Invalid `tx.captain.create()` invocation in
/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:59:43

  56 const hashedPassword = await hashPassword(password);
  57 
  58 // Create the captain and related entities
→ 59 const newCaptain = await tx.captain.create(
Transaction API error: Transaction already closed: A query cannot be executed on an expired transaction. The timeout for this transaction was 5000 ms, however 5323 ms passed since the start of the transaction. Consider increasing the interactive transaction timeout or doing less work in the transaction.
    at qn.handleRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:7315)
    at qn.handleAndLogRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6640)
    at qn.request (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6347)
    at async l (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:130:9616)
2025-03-20 22:34:57 [ERROR]: AuthError: Registration failed. Please try again later.
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:128:11
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:6:65)
2025-03-20 22:51:44 [ERROR]: PrismaClientKnownRequestError: 
Invalid `tx.captain.create()` invocation in
/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:25:45

  22 
  23 return await prisma.$transaction(
  24   async (tx) => {
→ 25     const newCaptain = await tx.captain.create(
Unique constraint failed on the fields: (`email`)
    at qn.handleRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:7315)
    at qn.handleAndLogRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6640)
    at qn.request (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6347)
    at async l (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:130:9616)
2025-03-20 22:51:44 [ERROR]: AuthError: Registration failed. Please try again later.
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:73:11
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:6:65)
2025-03-20 23:13:49 [ERROR]: ZodError: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "firstName"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "lastName"
    ],
    "message": "Required"
  },
  {
    "expected": "'ACTIVE' | 'INACTIVE' | 'SUSPENDED' | 'BUSY'",
    "received": "undefined",
    "code": "invalid_type",
    "path": [
      "status"
    ],
    "message": "Required"
  }
]
    at Object.get error [as error] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/zod/lib/types.js:55:31)
    at ZodObject.parse (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/zod/lib/types.js:131:22)
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/captainController.ts:13:49
    at Generator.next (<anonymous>)
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/captainController.ts:8:71
    at new Promise (<anonymous>)
    at __awaiter (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/captainController.ts:4:12)
    at registerCaptainController (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/captainController.ts:11:20)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:149:13)
2025-03-20 23:54:44 [ERROR]: PrismaClientKnownRequestError: 
Invalid `tx.captain.create()` invocation in
/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:25:45

  22 
  23 return await prisma.$transaction(
  24   async (tx) => {
→ 25     const newCaptain = await tx.captain.create(
Unique constraint failed on the fields: (`email`)
    at qn.handleRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:7315)
    at qn.handleAndLogRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6640)
    at qn.request (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6347)
    at async l (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:130:9616)
2025-03-20 23:54:44 [ERROR]: AuthError: Registration failed. Please try again later.
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:73:11
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:6:65)
2025-03-20 23:55:13 [ERROR]: PrismaClientKnownRequestError: 
Invalid `tx.captain.create()` invocation in
/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:25:45

  22 
  23 return await prisma.$transaction(
  24   async (tx) => {
→ 25     const newCaptain = await tx.captain.create(
Unique constraint failed on the fields: (`plate`)
    at qn.handleRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:7315)
    at qn.handleAndLogRequestError (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6640)
    at qn.request (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:121:6347)
    at async l (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/@prisma/client/runtime/library.js:130:9616)
2025-03-20 23:55:13 [ERROR]: AuthError: Registration failed. Please try again later.
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:73:11
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:6:65)
2025-03-21 00:24:42 [ERROR]: AuthError: Captain account is not activated
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:132:13
    at Generator.next (<anonymous>)
    at fulfilled (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:5:58)
2025-03-21 00:26:21 [ERROR]: AuthError: Captain account is not activated
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:132:13
    at Generator.next (<anonymous>)
    at fulfilled (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/captainService.ts:5:58)
2025-03-21 01:13:40 [ERROR]: Error requesting ride: PrismaClientValidationError: 
Invalid `prisma.ride.create()` invocation in
/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:102:40

   99     fare: number
  100 ) => {
  101     try {
→ 102         const ride = await prisma.ride.create({
                data: {
                  userId: "cm8hl1cj80000uh7faqfr5aa2",
                  pickup: "40.712776,",
                  destination: "-74.005974",
                  fare: "120",
                        ~~~~~
                  status: "PENDING",
                  otp: "7349"
                }
              })

Argument `fare`: Invalid value provided. Expected Float, provided String.
2025-03-21 01:13:40 [ERROR]: AuthError: Unable to request ride
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:115:15
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:6:65)
2025-03-21 01:33:47 [ERROR]: Error accepting ride: PrismaClientKnownRequestError: 
Invalid `prisma.ride.update()` invocation in
/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:25:40

  22  */
  23 export const acceptRide = async (rideId: string, captainId: string) => {
  24     try {
→ 25         const ride = await prisma.ride.update(
An operation failed because it depends on one or more records that were required but not found. Record to update not found.
2025-03-21 01:33:47 [ERROR]: AuthError: Unable to accept ride
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:32:15
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:6:65)
2025-03-21 01:34:09 [ERROR]: Error accepting ride: PrismaClientKnownRequestError: 
Invalid `prisma.ride.update()` invocation in
/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:25:40

  22  */
  23 export const acceptRide = async (rideId: string, captainId: string) => {
  24     try {
→ 25         const ride = await prisma.ride.update(
An operation failed because it depends on one or more records that were required but not found. Record to update not found.
2025-03-21 01:34:09 [ERROR]: AuthError: Unable to accept ride
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:32:15
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:6:65)
2025-03-21 01:35:38 [ERROR]: Error accepting ride: PrismaClientKnownRequestError: 
Invalid `prisma.ride.update()` invocation in
/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:25:40

  22  */
  23 export const acceptRide = async (rideId: string, captainId: string) => {
  24     try {
→ 25         const ride = await prisma.ride.update(
An operation failed because it depends on one or more records that were required but not found. Record to update not found.
2025-03-21 01:35:38 [ERROR]: AuthError: Unable to accept ride
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:32:15
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:6:65)
2025-03-21 01:35:49 [ERROR]: Error accepting ride: PrismaClientKnownRequestError: 
Invalid `prisma.ride.update()` invocation in
/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:25:40

  22  */
  23 export const acceptRide = async (rideId: string, captainId: string) => {
  24     try {
→ 25         const ride = await prisma.ride.update(
An operation failed because it depends on one or more records that were required but not found. Record to update not found.
2025-03-21 01:35:50 [ERROR]: AuthError: Unable to accept ride
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:32:15
    at Generator.throw (<anonymous>)
    at rejected (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:6:65)
2025-03-21 01:43:53 [ERROR]: Error accepting ride: AuthError: Ride not found or already accepted
2025-03-21 01:43:53 [ERROR]: AuthError: Unable to accept ride
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:52:15
    at Generator.next (<anonymous>)
    at fulfilled (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/services/rideService.ts:5:58)
2025-03-21 01:51:41 [ERROR]: AuthError: Missing required fields
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:109:19
    at Generator.next (<anonymous>)
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:8:71
    at new Promise (<anonymous>)
    at __awaiter (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:4:12)
    at startRideController (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:103:20)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
2025-03-21 01:54:09 [ERROR]: AuthError: Missing required fields
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:109:19
    at Generator.next (<anonymous>)
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:8:71
    at new Promise (<anonymous>)
    at __awaiter (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:4:12)
    at startRideController (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:103:20)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
2025-03-21 01:54:11 [ERROR]: AuthError: Missing required fields
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:109:19
    at Generator.next (<anonymous>)
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:8:71
    at new Promise (<anonymous>)
    at __awaiter (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:4:12)
    at startRideController (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:103:20)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
2025-03-21 01:54:11 [ERROR]: AuthError: Missing required fields
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:109:19
    at Generator.next (<anonymous>)
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:8:71
    at new Promise (<anonymous>)
    at __awaiter (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:4:12)
    at startRideController (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:103:20)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
2025-03-21 02:21:23 [ERROR]: AuthError: Missing required fields
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:146:19
    at Generator.next (<anonymous>)
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:8:71
    at new Promise (<anonymous>)
    at __awaiter (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:4:12)
    at completeRideController (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:140:20)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
2025-03-21 02:21:46 [ERROR]: AuthError: Missing required fields
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:146:19
    at Generator.next (<anonymous>)
    at /Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:8:71
    at new Promise (<anonymous>)
    at __awaiter (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:4:12)
    at completeRideController (/Users/anuragsingh/Github Project/Backend/prisma-backend/src/controllers/rideController.ts:140:20)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
    at next (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/Users/anuragsingh/Github Project/Backend/prisma-backend/node_modules/express/lib/router/layer.js:95:5)
