name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Authenticate with Google Cloud
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > /tmp/gcp-key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Start Cloud SQL Proxy
        run: |
          wget https://storage.googleapis.com/cloudsql-proxy/v1.33.3/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
          chmod +x cloud_sql_proxy
          ./cloud_sql_proxy -instances=${{ secrets.CLOUD_SQL_INSTANCE }}=tcp:5432 &

      - name: Debug Cloud SQL Proxy
        run: sleep 5 && ps aux | grep cloud_sql_proxy

      - name: Build and Push Docker Image
        run: |
          gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/prisma-backend

      - name: Debug Cloud Build Logs
        run: gcloud builds list --limit=5

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy prisma-backend \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/prisma-backend \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --add-cloudsql-instances=${{ secrets.CLOUD_SQL_INSTANCE }} \
            --set-env-vars DATABASE_URL="postgresql://${{ secrets.DATABASE_USER_GCP }}:${{ secrets.DATABASE_PASSWORD_GCP }}@/cloudsql/${{ secrets.CLOUD_SQL_INSTANCE }}/${{ secrets.DATABASE_NAME_GCP }}"
